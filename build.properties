# build.compiler - seems to be issues using jikes and JDK 1.4 is just as fast
build.compiler=modern

# name of web application
webapp.name=HacmeBooks
webapp.version=2.0

copyright.year=2006

# name of generated war file
webapp.war=${webapp.name}.war

# overrides value in build.xml for showing deprecation errors
compile.deprecation=true

build.dir=${basedir}/build
dist.dir=${basedir}/dist
test.dir=${build.dir}/test
javac.debug=true
junit.fork=true
xdoclet.force=false

# error messages mail settings 
# for log4j.properties file (in web/WEB-INF/log4.properties).
error.mailTo=roman.hustad@foundstone.com
error.mailHost=localhost
error.server=localhost

# ftp server properties
ftp.server=upload.sourceforge.net
ftp.remoteDir=incoming
ftp.user=anonymous

# documentation (wiki pages to retrieve)
# ------------------------------------------------------------------
wiki.pages=AppFuseQuickStart&AppFuse&DevelopmentEnvironment&AppFuseEclipse&CreateDAO&CreateManager&CreateActions&SpringControllers&WebWorkActions&JSFBeans&TapestryPages&ValidationAndList&ValidationAndListSpring&ValidationAndListWebWork&ValidationAndListJSF&ValidationAndListTapestry&AppFuseSupport&Articles&AppFuseOnResin&AppFuseVelocity&AppFuseOnOrion&AppFuseAntTasks&XDocletIndexedProperties&AppFuseAnthill&AppFuseCruiseControl&AppFuseOnPostgreSQL

# database properties - written to database.properties at build time
# ------------------------------------------------------------------
# If you have a different database in production that you do in 
# development, you can uncomment and move the settings below to a 
# ~/.build.properties or ~/.appname-build.properties file and those
# settings will override the defaults in properties.xml.  If you're 
# convinced you'll stay with one database, you can change the 
# defaults in properties.xml.
# ------------------------------------------------------------------
#database.jar=${postgresql.jar}
#database.type=postgresql
#database.name=HacmeBooks
#database.host=localhost
#database URL for creating other databases (doesn't work with pgsql)
#database.admin.url=jdbc:${database.type}://${database.host}/template1
#database.admin.username=postgres
#database.admin.password=postgres

#hibernate.dialect=net.sf.hibernate.dialect.PostgreSQLDialect
#database.driver_class=org.postgresql.Driver
#database.url=jdbc:${database.type}://${database.host}/${database.name}


# jdbc:derby:net://localhost:1527//javadev/hacmedb
database.name=HacmeBooks
#database.host=localhost
#database URL for creating other databases (doesn't work with pgsql)
#database.admin.url=jdbc:${database.type}://${database.host}/template1
#database.admin.username=postgres
#database.admin.password=postgres
#jdbc:derby:c:\JavaDev\HacmeDB;create=true
#hibernate.dialect=net.sf.hibernate.dialect.PostgreSQLDialect

#
#database.driver_class=com.p6spy.engine.spy.P6SpyDriver

#database.jar=${derby.jar}
#database2.jar=${derby2.jar}
#database.jar=${p6spy.jar}
#database.type=derby

# database.type=derby
# The following settings allow for Network based DB
#database.url=jdbc:derby:net://localhost:1527//JavaDev/hacmedb:retrieveMessagesFromServerOnGetMessage=true;
#database.username=APP
#database.password=APP
#database.driver_class=com.ibm.db2.jcc.DB2Driver

#The following settings allow for an embedded database
#database.driver_class=org.apache.derby.jdbc.EmbeddedDriver
#database.url=jdbc:derby:HacmeDB
#database.username=
#database.password=

database.type=hsqldb
database.jar=${hsqldb.jar}
database.driver_class=org.hsqldb.jdbcDriver
#database.url=jdbc:hsqldb:hsql://localhost/xdb
database.url=jdbc:hsqldb:file:data/HacmeDB
database.username=sa
database.password=

dao.type=jdbc

# requires that the HacmeBank application is running at the specified URL
hacmebank.user.wsdl=http://localhost/HacmeBank_v2_WS/WebServices/UserManagement.asmx?WSDL
hacmebank.account.wsdl=http://localhost/HacmeBank_v2_WS/WebServices/AccountManagement.asmx?WSDL


